/*

>Each item have 3 properties or keys: name, price, and image.

>Each value of each key will be used to display the right data to use for each item slot.

*/
item = new HashMap<>();
item.put("name", "Es Dawet (1.5k)");
item.put("price", "1500");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (2k) ");
item.put("price", "2000");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (2.5k)");
item.put("price", "2500");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (3k) ");
item.put("price", "3000");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (3.5k)");
item.put("price", "3500");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (4k) ");
item.put("price", "4000");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (4.5k)");
item.put("price", "4500");
item.put("image", "esdawet");
itemsList.add(item);
item = new HashMap<>();
item.put("name", "Es Dawet (5k)");
item.put("price", "5000");
item.put("image", "esdawet");
itemsList.add(item);
/*

>After adding the records of items in 'itemsList' array, we need to calculate how many rows needed for listview to display.

>In our custom view 'cv_itemslots' we have 3 items to show per row.

>That means we have to divide the total or length of array 'itemsList' to 3 in order to get how many rows to display. But we also need to add another extra row for remainder.

>Example: if we have 4 records in itemsList...
==>calculate rows:
4 / 3 = 1 --> there is 1 set of 3 items.
==>calculate remainder:
4 % 3 = 1 --> there is 1 remaining item to display.
==>add row if have remainder
if remainder > 0... then add row.
else... no need to add row.

>Example#2: if we have 11 records in itemsList...
==>calculate rows:
11 / 3 = 3 --> there are 3 set of 3 items.
==>calculate remainder:
11 % 3 = 2 --> there is 2 remaining item to display.
==>add row if have remainder
if remainder > 0... then add row.
else... no need to add row.

*/
rows = itemsList.size() / 2;
remainder = itemsList.size() % 2;
if (remainder > 0) {
	rows = rows + 1;
}
/*

>Now that we know how much rows we need, we then need to add records for 'slotRows' array and then bind the array data to our listview.

>But before that, we will clear records in 'slotRows' array. It is optional but it will be needed if we made changes to amount of item slots dynamically.

>The data recorded from 'slotRows' won't be used, we can leave each key and value blank. We are just adding record in 'slotRows' array to generate 'cv_itemslots' for every record it contains.

*/
slotRows.clear();
for(int _repeat73 = 0; _repeat73 < (int)(rows); _repeat73++) {
	{
		HashMap<String, Object> _item = new HashMap<>();
		_item.put("", "");
		slotRows.add(_item);
	}
	
}
lv_items.setAdapter(new Lv_itemsAdapter(slotRows));
